#!/bin/bash

#Usage: cd <genome>.<motifdb>; ../runall <motifdb> <pthresh>

base_dir=`pwd`

meme_file=$1
output_pthresh=$2
bg_file=/net/seq/data/projects/motifs/hg19.K36.mappable_only.5-order.markov
fasta_file=$3

chroms="`cat $3.fai | cut -f1`" 

jobid="moods-`basename $base_dir`"

moods=/home/jvierstra/.local/src/MOODS-python-1.9.3/scripts/moods_dna.py

echo -n "Running MOODS against $fasta_file"

echo "chroms=$chroms"
echo "bg_file=$bg_file"
echo "fasta_file=$fasta_file"
echo "meme_file=$meme_file"

if [ ! -f "$fasta_file.fai" ]; then
	echo "ERROR: No index for FASTA file: $fasta_file"
	exit 1
fi

####

pfm_dir=${base_dir}/pfm

rm -fr ${pfm_dir} && mkdir -p ${pfm_dir}

python2 /home/jvierstra/data/motifs/databases/meme2jaspar.py ${meme_file} ${pfm_dir}

pfms=$(find ${pfm_dir} -name *.pfm)

#### make input list

output_dir=${base_dir}/scans

rm -fr ${output_dir} &&  mkdir -p ${output_dir}/logs
rm -f ${base_dir}/inputs.txt

for pfm in ${pfms}; do 
    echo "${pfm}" >> ${base_dir}/inputs.txt
done

n=`wc -l < inputs.txt`

####

bg_args=(`cat ${bg_file} | head -n5 | tail -n +2 | cut -d" " -f2`)


####

cat <<EOF > ${base_dir}/slurm.merge
#!/bin/bash
#
#SBATCH --output=${output_dir}/logs/%J.out
#SBATCH --mem=32G
#SBATCH --cpus-per-task=1
#SBATCH --partition=queue0

sort --batch-size=100 -k1,1 -k2,2n -k3,3n -k6,6 -m ${output_dir}/moods.* > ${base_dir}/moods.combined.all.bed

EOF

cat <<EOF > ${base_dir}/slurm.moods_chunk
#!/bin/bash
#
#SBATCH --output=${output_dir}/logs/%A.%a.out
#SBATCH --mem=8G
#SBATCH --cpus-per-task=1
#SBATCH --partition=queue0

TMPDIR=/tmp/\$SLURM_JOB_ID
mkdir -p \${TMPDIR}

pfm=\`cat ${base_dir}/inputs.txt | head -n \${SLURM_ARRAY_TASK_ID} | tail -n 1\`

python2 ${moods} --sep ";" -s ${fasta_file} --p-value ${output_pthresh} --lo-bg ${bg_args[@]} -m \${pfm} -o \${TMPDIR}/moods.out

cat \${TMPDIR}/moods.out | awk '{print \$1}' > \${TMPDIR}/chrom.txt

cat \${TMPDIR}/moods.out \
	| sed 's/\.pfm//g' \
	| awk -v FS=";" -v OFS="\t" \
		'{ print \$1, \$3, \$3+length(\$6), \$2, \$5, \$4, \$6; }' \
	| sort -k1,1 -k2,2n -k3,3n -k6,6 \
> ${output_dir}/moods.\${SLURM_ARRAY_TASK_ID}

rm -rf \${TMPDIR}

EOF

#### end fimo script

echo "submitting ${n} jobs to the cluster..."

JOB0=$(sbatch --export=ALL --parsable \
	--job-name=${jobid} \
	--array=1-${n} \
	${base_dir}/slurm.moods_chunk)
echo $JOB0

JOB1=$(sbatch --export=ALL --parsable \
	--job-name=${jobid}-merge \
	--depend=afterok:$JOB0 \
	${base_dir}/slurm.merge)
echo $JOB1
